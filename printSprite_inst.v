// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Fri Jun 21 16:18:05 2019

printSprite printSprite_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.reset(reset_sig) ,	// input  reset_sig
	.p_x(p_x_sig) ,	// input [10:0] p_x_sig
	.p_y(p_y_sig) ,	// input [9:0] p_y_sig
	.active(active_sig) ,	// input  active_sig
	.offset_x(offset_x_sig) ,	// input [width_x-1:0] offset_x_sig
	.offset_y(offset_y_sig) ,	// input [width_y-1:0] offset_y_sig
	.new_position_x(new_position_x_sig) ,	// input [10:0] new_position_x_sig
	.new_position_y(new_position_y_sig) ,	// input [9:0] new_position_y_sig
	.moveSprite(moveSprite_sig) ,	// input  moveSprite_sig
	.address(address_sig) ,	// output [addr_width-1:0] address_sig
	.element(element_sig) ,	// output [amountMemoryElement-1:0] element_sig
	.enable(enable_sig) 	// output  enable_sig
);

defparam printSprite_inst.initialPosition_x = 0;
defparam printSprite_inst.initialPosition_y = 0;
defparam printSprite_inst.amountMemoryElement = 0;
defparam printSprite_inst.memoryElement = 0;
defparam printSprite_inst.addr_width = 0;
defparam printSprite_inst.width_x = 0;
defparam printSprite_inst.width_y = 0;
defparam printSprite_inst.sizeSprite_x = 0;
defparam printSprite_inst.sizeSprite_y = 0;
