// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Wed Aug  7 12:40:53 2019

collision collision_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.reset(reset_sig) ,	// input  reset_sig
	.main_x(main_x_sig) ,	// input [10:0] main_x_sig
	.main_y(main_y_sig) ,	// input [9:0] main_y_sig
	.x1(x1_sig) ,	// input [10:0] x1_sig
	.y1(y1_sig) ,	// input [9:0] y1_sig
	.x2(x2_sig) ,	// input [10:0] x2_sig
	.y2(y2_sig) ,	// input [9:0] y2_sig
	.x3(x3_sig) ,	// input [10:0] x3_sig
	.y3(y3_sig) ,	// input [9:0] y3_sig
	.x4(x4_sig) ,	// input [10:0] x4_sig
	.y4(y4_sig) ,	// input [9:0] y4_sig
	.collision(collision_sig) ,	// output  collision_sig
	.sprite_collision(sprite_collision_sig) 	// output [1:0] sprite_collision_sig
);

