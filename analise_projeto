coisas prontas: (com as modificações)
	* decodificador de instrução.
    * máquina de estados.
	* demultiplexador.
    * banco de registradores.
    * código para preparação dos bitmaps dos sprites.
    * bitmap de sprites de teste.
	* teste VGA (480x320) e (640x480) (problemas de visualização com 480x320).
	* implementar a lógica que possibilita a unidade de controle saber se uma instrução foi finalizada ou não.

coisas a fazer/testar:
	* modelar o módulo de impressão.
	* preparar a memória de sprites.
	* testar VGA (480x320) no monitor antigo do labHard.

ideias:
	* Gerar as saídas da unidade de controle na primeira parte do pulso de clock e as escritas no banco ou na memória na segunda parte do pulso de clock.
	
	* Gerar o sinal do printtingScreen na borda de subida do pulso de clock.
	* Como as escritas são feitas na descida do pulso de clock, as instruções de escrita no banco e na memória duram somente 1 pulso de clock.

	* O mux_out pode servir para verificar o status do módulo de impressão (ocioso/imprimindo) ou verificar se uma
	instrução foi executada com sucesso.

	* Colocar para o módulo de impressão informar à unidade de controle que irá começar a impressão de sprites 1 pulsos de clock antes da área ativa. 

	* Toda vez que for executar uma instrução, o programador precisar verificar o status do módulo de impressão.

W    - Screen Width
H    - Screen Height
HFP  - Horizontal Front Porch
HSYN - Horizontal Sync Pulse
HBP  - Horizontal Back Porch
VFP  - Vertical Front Porch
VSYN - Vertical Sync Pulse
VBP  - Vertical Back Porch

          W    H    HFP HSYN  HBP  VFP VSYN  VBP
480x320   480  320  16  40    56   3   10    3

//////////////////////////////////////////////////////////////////

Colocar um bit em cada pixel dos sprites para informar se o pixel será
transparente ou não.

///////////////////////////////////////////////////////////////////

Cada valor de coordenada dos pixeis da imagem corresponde a uma entrada na paleta de cores. Com isso, para diminuir a quantidade de pulsos de clock de acesso à memória, posso criar um código em Java para
ler os arquivos da paleta de cada pixel e inserir seus valores da respectiva cor em um novo arquivo. Com isso, cada coordenada dos sprites teriam como valor a sua respectiva cor.
