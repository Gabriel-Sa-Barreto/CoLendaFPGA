// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 18.1 (Build Build 625 09/12/2018)
// Created on Wed Jun 17 00:12:30 2020

mod_comparator mod_comparator_inst
(
	.r0(r0_sig) ,	// input [size_reg-1:0] r0_sig
	.r1(r1_sig) ,	// input [size_reg-1:0] r1_sig
	.r2(r2_sig) ,	// input [size_reg-1:0] r2_sig
	.r3(r3_sig) ,	// input [size_reg-1:0] r3_sig
	.r4(r4_sig) ,	// input [size_reg-1:0] r4_sig
	.r5(r5_sig) ,	// input [size_reg-1:0] r5_sig
	.r6(r6_sig) ,	// input [size_reg-1:0] r6_sig
	.r7(r7_sig) ,	// input [size_reg-1:0] r7_sig
	.r8(r8_sig) ,	// input [size_reg-1:0] r8_sig
	.r9(r9_sig) ,	// input [size_reg-1:0] r9_sig
	.r10(r10_sig) ,	// input [size_reg-1:0] r10_sig
	.r11(r11_sig) ,	// input [size_reg-1:0] r11_sig
	.r12(r12_sig) ,	// input [size_reg-1:0] r12_sig
	.r13(r13_sig) ,	// input [size_reg-1:0] r13_sig
	.r14(r14_sig) ,	// input [size_reg-1:0] r14_sig
	.r15(r15_sig) ,	// input [size_reg-1:0] r15_sig
	.r16(r16_sig) ,	// input [size_reg-1:0] r16_sig
	.r17(r17_sig) ,	// input [size_reg-1:0] r17_sig
	.r18(r18_sig) ,	// input [size_reg-1:0] r18_sig
	.r19(r19_sig) ,	// input [size_reg-1:0] r19_sig
	.r20(r20_sig) ,	// input [size_reg-1:0] r20_sig
	.r21(r21_sig) ,	// input [size_reg-1:0] r21_sig
	.r22(r22_sig) ,	// input [size_reg-1:0] r22_sig
	.r23(r23_sig) ,	// input [size_reg-1:0] r23_sig
	.r24(r24_sig) ,	// input [size_reg-1:0] r24_sig
	.r25(r25_sig) ,	// input [size_reg-1:0] r25_sig
	.r26(r26_sig) ,	// input [size_reg-1:0] r26_sig
	.r27(r27_sig) ,	// input [size_reg-1:0] r27_sig
	.r28(r28_sig) ,	// input [size_reg-1:0] r28_sig
	.r29(r29_sig) ,	// input [size_reg-1:0] r29_sig
	.r30(r30_sig) ,	// input [size_reg-1:0] r30_sig
	.r31(r31_sig) ,	// input [size_reg-1:0] r31_sig
	.check(check_sig) ,	// input [size_check-1:0] check_sig
	.register_read(register_read_sig) 	// output [size_reg-1:0] register_read_sig
);

defparam mod_comparator_inst.size_reg = 32;
defparam mod_comparator_inst.size_check = 20;
defparam mod_comparator_inst.x_init = 19;
defparam mod_comparator_inst.x_fim = 28;
defparam mod_comparator_inst.y_init = 9;
defparam mod_comparator_inst.y_fim = 18;
defparam mod_comparator_inst.sprLine = 20;
